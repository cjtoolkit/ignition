// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: template.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockTemplate is a mock of Template interface
type MockTemplate struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateMockRecorder
}

// MockTemplateMockRecorder is the mock recorder for MockTemplate
type MockTemplateMockRecorder struct {
	mock *MockTemplate
}

// NewMockTemplate creates a new mock instance
func NewMockTemplate(ctrl *gomock.Controller) *MockTemplate {
	mock := &MockTemplate{ctrl: ctrl}
	mock.recorder = &MockTemplateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplate) EXPECT() *MockTemplateMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockTemplate) Execute(wr io.Writer, data interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", wr, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockTemplateMockRecorder) Execute(wr, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTemplate)(nil).Execute), wr, data)
}
