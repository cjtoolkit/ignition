// +build debug

// Code generated by MockGen. DO NOT EDIT.
// Source: cookie.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSecureCookieDecoder is a mock of SecureCookieDecoder interface
type MockSecureCookieDecoder struct {
	ctrl     *gomock.Controller
	recorder *MockSecureCookieDecoderMockRecorder
}

// MockSecureCookieDecoderMockRecorder is the mock recorder for MockSecureCookieDecoder
type MockSecureCookieDecoderMockRecorder struct {
	mock *MockSecureCookieDecoder
}

// NewMockSecureCookieDecoder creates a new mock instance
func NewMockSecureCookieDecoder(ctrl *gomock.Controller) *MockSecureCookieDecoder {
	mock := &MockSecureCookieDecoder{ctrl: ctrl}
	mock.recorder = &MockSecureCookieDecoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecureCookieDecoder) EXPECT() *MockSecureCookieDecoderMockRecorder {
	return m.recorder
}

// Decode mocks base method
func (m *MockSecureCookieDecoder) Decode(name, value string, dst interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decode", name, value, dst)
	ret0, _ := ret[0].(error)
	return ret0
}

// Decode indicates an expected call of Decode
func (mr *MockSecureCookieDecoderMockRecorder) Decode(name, value, dst interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decode", reflect.TypeOf((*MockSecureCookieDecoder)(nil).Decode), name, value, dst)
}
